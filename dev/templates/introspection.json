{"introspection":"<div class=\"docs\"><h1>Introspection API</h1><p>Stylus supports an introspection API. This allows mixins and functions to reflect relative to the caller, etc.</p><h2 id=\"mixin\">mixin</h2><p>The <code class=\"highlighter-rouge\">mixin</code> local variable is automatically assigned within function bodies. It contains the string <code class=\"highlighter-rouge\">root</code> if the function was called at the root level, or <code class=\"highlighter-rouge\">block</code> indicating otherwise, and finally <code class=\"highlighter-rouge\">false</code> if the invoked function expects a return value.</p><p>In the following example, we define <code class=\"highlighter-rouge\">reset()</code> to alter its behaviour depending on whether itâ€™s mixed into root, into another block, or into a return value, as used in the <code class=\"highlighter-rouge\">foo</code> property below:</p><div><pre><code>  reset()\r\n    if mixin == 'root'\r\n      got\r\n        root true\r\n    else if mixin\r\n      got 'a mixin'\r\n    else\r\n      'not a mixin'\r\n\r\n  reset()\r\n\r\n  body\r\n    reset()\r\n    foo reset()\r\n</code></pre></div><p>Compiles to:</p><div><pre><code>    got {\r\n      root: true;\r\n    }\r\n    body {\r\n      foo: \"not a mixin\";\r\n      got: \"a mixin\";\r\n    }\r\n</code></pre></div></div>\r\n"}