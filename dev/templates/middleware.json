{"middleware":"<div class=\"docs\"><h1>Connect Middleware</h1><p>Stylus ships with Connect middleware for auto-compiling Stylus sheets whenever they’re modified.</p><h2 id=\"stylusmiddlewareoptions\">stylus.middleware(options)</h2><h3 id=\"options\">Options</h3><p>Return Connect middleware with the given <code class=\"highlighter-rouge\">options</code>.</p><div><pre><code>  `serve`     Serve the stylus files from `dest` [true]\r\n  `force`     Always re-compile\r\n  `src`       Source directory used to find .styl files\r\n  `dest`      Destination directory used to output .css files\r\n              when undefined defaults to `src`.\r\n  `compile`   Custom compile function, accepting the arguments\r\n              `(str, path)`.\r\n  `compress`  Whether the output .css files should be compressed\r\n  `firebug`   Emits debug infos in the generated css that can\r\n              be used by the FireStylus Firebug plugin\r\n  `linenos`   Emits comments in the generated css indicating\r\n              the corresponding stylus line\r\n  `sourcemap` Generates a sourcemap in sourcemaps v3 format\r\n</code></pre></div><h3 id=\"examples\">Examples</h3><p>Serve .styl files from ./public:</p><div><pre><code>var app = connect();\r\n\r\napp.middleware(__dirname + '/public');\r\n</code></pre></div><p>Change the <code class=\"highlighter-rouge\">src</code> and <code class=\"highlighter-rouge\">dest</code> options to alter where .styl files are loaded and where they’re saved:</p><div><pre><code> var app = connect();\r\n\r\n app.middleware({\r\n   src: __dirname + '/stylesheets',\r\n   dest: __dirname + '/public'\r\n });\r\n</code></pre></div><p>Here we set up the custom compile function so that we may set the <code class=\"highlighter-rouge\">compress</code> option, or define additional functions.</p><p>By default the compile function simply sets the <code class=\"highlighter-rouge\">filename</code> and renders the CSS. In the following case we’re compressing the output, using the “nib” library plugin, and auto-importing it.</p><div><pre><code> function compile(str, path) {\r\n   return stylus(str)\r\n     .set('filename', path)\r\n     .set('compress', true)\r\n     .use(nib())\r\n     .import('nib');\r\n }\r\n</code></pre></div><p>Pass it as an option like so:</p><div><pre><code> var app = connect();\r\n\r\n app.middleware({\r\n     src: __dirname\r\n   , dest: __dirname + '/public'\r\n   , compile: compile\r\n })\r\n</code></pre></div></div>\r\n"}