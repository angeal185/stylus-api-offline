{"cssStyle":"<div class=\"docs\"><h1>CSS Style Syntax</h1><p>Stylus transparently supports a regular CSS-style syntax. This means you don’t need an alternative parser, or specify that a certain file uses a specific style.</p><h2 id=\"example\">Example</h2><p>Below is a small style using the indented approach:</p><div><pre><code> border-radius()\r\n   -webkit-border-radius arguments\r\n   -moz-border-radius arguments\r\n   border-radius arguments\r\n\r\n body a\r\n   font 12px/1.4 \"Lucida Grande\", Arial, sans-serif\r\n   background black\r\n   color #ccc\r\n\r\n form input\r\n   padding 5px\r\n   border 1px solid\r\n   border-radius 5px\r\n</code></pre></div><p>Since braces, colons, and semi-colons are optional, we could write this example just as we would with normal CSS:</p><div><pre><code> border-radius() {\r\n   -webkit-border-radius: arguments;\r\n   -moz-border-radius: arguments;\r\n   border-radius: arguments;\r\n }\r\n\r\n body a {\r\n   font: 12px/1.4 \"Lucida Grande\", Arial, sans-serif;\r\n   background: black;\r\n   color: #ccc;\r\n }\r\n\r\n form input {\r\n   padding: 5px;\r\n   border: 1px solid;\r\n   border-radius: 5px;\r\n }\r\n</code></pre></div><p>While Stylus don’t support <em>every</em> possible CSS-like syntax, if can understand even such code:</p><div><pre><code>    border-radius() {\r\n      -webkit-border-radius: arguments;\r\n      -moz-border-radius: arguments;\r\n      border-radius: arguments;\r\n    }\r\n\r\nbody a\r\n{\r\n  font: 12px/1.4 \"Lucida Grande\", Arial, sans-serif;\r\n    background: black;\r\n  color: #ccc;\r\n}\r\n\r\n    form input {\r\n      padding: 5px;\r\n  border: 1px solid;\r\n      border-radius: 5px;\r\n      }\r\n</code></pre></div><p>Since we may mix and match the two variants, the following is valid as well:</p><div><pre><code> border-radius()\r\n   -webkit-border-radius: arguments;\r\n   -moz-border-radius: arguments;\r\n   border-radius: arguments;\r\n\r\n body a {\r\n   font: 12px/1.4 \"Lucida Grande\", Arial, sans-serif;\r\n   background: black;\r\n   color: #ccc;\r\n }\r\n\r\n form input\r\n   padding: 5px;\r\n   border: 1px solid;\r\n   border-radius: 5px;\r\n</code></pre></div><p>Variables, functions, mixins, and all the other features provided by Stylus still work as expected:</p><div><pre><code> main-color = white\r\n main-hover-color = black\r\n\r\n body a {\r\n   color: main-color;\r\n   &amp;:hover { color: main-hover-color; }\r\n }\r\n\r\n body a { color: main-color; &amp;:hover { color: main-hover-color; }}\r\n</code></pre></div><p>There are a few caveats to this rule: since the two styles may be mixed and matched, some indentation rules still apply. So although not <em>every</em> plain-CSS stylesheet will work with zero modification, this feature allows those who prefer CSS syntax to continue doing so while leveraging Stylus’ other powerful features.</p></div>\r\n"}