{"vargs":"<div class=\"docs\"><h1>Rest Params</h1><p>Stylus supports rest parameters in the form of <code class=\"highlighter-rouge\">name...</code>. These params consume the remaining arguments passed to a mixin or function. This is useful when utilizing (for example) the implicit function call support to apply vendor prefixes like <code class=\"highlighter-rouge\">-webkit</code> or <code class=\"highlighter-rouge\">-moz</code>.</p><p>In the example below, we consume all the arguments passed, and simply apply them to multiple properties.</p><div><pre><code class=\"stylus\"> box-shadow(args...)\r\n   -webkit-box-shadow args\r\n   -moz-box-shadow args\r\n   box-shadow args\r\n\r\n #login\r\n   box-shadow 1px 2px 5px #eee\r\n</code></pre></div><p>Yielding:</p><div><pre><code>  #login {\r\n    -webkit-box-shadow: 1px 2px 5px #eee;\r\n    -moz-box-shadow: 1px 2px 5px #eee;\r\n    box-shadow: 1px 2px 5px #eee;\r\n  }\r\n</code></pre></div><p>If we wanted to peek at a specific argument—say, <code class=\"highlighter-rouge\">x-offset</code>—we could simply use <code class=\"highlighter-rouge\">args[0]</code>. Or, we may wish to redefine the mixin:</p><div><pre><code class=\"stylus\">    box-shadow(offset-x, args...)\r\n      got-offset-x offset-x\r\n      -webkit-box-shadow offset-x args\r\n      -moz-box-shadow offset-x args\r\n      box-shadow offset-x args\r\n\r\n    #login\r\n      box-shadow 1px 2px 5px #eee\r\n</code></pre></div><p>Yielding:</p><div><pre><code>    #login {\r\n      got-offset-x: 1px;\r\n      -webkit-box-shadow: 1px 2px 5px #eee;\r\n      -moz-box-shadow: 1px 2px 5px #eee;\r\n      box-shadow: 1px 2px 5px #eee;\r\n    }\r\n</code></pre></div><h2 id=\"arguments\">arguments</h2><p>The <code class=\"highlighter-rouge\">arguments</code> variable is injected into mixin and function bodies, containing the exact expression passed. This is useful for several reasons (especially vendor support) as you get the <em>exact</em> expression, commas and all.</p><p>For example, if we use a rest param, the comma is consumed (since it is an expression delimiter):</p><div><pre><code class=\"stylus\">  box-shadow(args...)\r\n    -webkit-box-shadow args\r\n    -moz-box-shadow args\r\n    box-shadow args\r\n\r\n  #login\r\n    box-shadow #ddd 1px 1px, #eee 2px 2px\r\n</code></pre></div><p>Yielding undesired results:</p><div><pre><code>  #login {\r\n    -webkit-box-shadow: #ddd 1px 1px #eee 2px 2px;\r\n    -moz-box-shadow: #ddd 1px 1px #eee 2px 2px;\r\n    box-shadow: #ddd 1px 1px #eee 2px 2px;\r\n  }\r\n</code></pre></div><p>Let’s redefine the mixin using <code class=\"highlighter-rouge\">arguments</code>:</p><div><pre><code>  box-shadow()\r\n    -webkit-box-shadow arguments\r\n    -moz-box-shadow arguments\r\n    box-shadow arguments\r\n\r\n  body\r\n    box-shadow #ddd 1px 1px, #eee 2px 2px\r\n</code></pre></div><p>Now, yielding the desired result:</p><div><pre><code>  body {\r\n    -webkit-box-shadow: #ddd 1px 1px, #eee 2px 2px;\r\n    -moz-box-shadow: #ddd 1px 1px, #eee 2px 2px;\r\n    box-shadow: #ddd 1px 1px, #eee 2px 2px;\r\n  }\r\n</code></pre></div></div>\r\n"}