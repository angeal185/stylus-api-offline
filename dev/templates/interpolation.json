{"interpolation":"<div class=\"docs\"><h1>Interpolation</h1><p>Stylus supports interpolation by using the <code class=\"highlighter-rouge\">{}</code> characters to surround an expression, which then becomes part of the identifier. For example, <code class=\"highlighter-rouge\">-webkit-{'border' + '-radius'}</code> evaluates to <code class=\"highlighter-rouge\">-webkit-border-radius</code>.</p><p>A great example use-case for this is expanding properties with vendor prefixes.</p><div><pre><code>  vendor(prop, args)\r\n    -webkit-{prop} args\r\n    -moz-{prop} args\r\n    {prop} args\r\n\r\n  border-radius()\r\n    vendor('border-radius', arguments)\r\n\r\n  box-shadow()\r\n    vendor('box-shadow', arguments)\r\n\r\n  button\r\n    border-radius 1px 2px / 3px 4px\r\n</code></pre></div><p>Yields:</p><div><pre><code>  button {\r\n    -webkit-border-radius: 1px 2px / 3px 4px;\r\n    -moz-border-radius: 1px 2px / 3px 4px;\r\n    border-radius: 1px 2px / 3px 4px;\r\n  }\r\n</code></pre></div><h2 id=\"selector-interpolation\">Selector Interpolation</h2><p>Interpolation works with selectors as well. For example, we may iterate to assign the <code class=\"highlighter-rouge\">height</code> property for the first 5 rows in a table, as shown below:</p><div><pre><code>table\r\n  for row in 1 2 3 4 5\r\n    tr:nth-child({row})\r\n      height: 10px * row\r\n</code></pre></div><p>Yields:</p><div><pre><code>table tr:nth-child(1) {\r\n  height: 10px;\r\n}\r\ntable tr:nth-child(2) {\r\n  height: 20px;\r\n}\r\ntable tr:nth-child(3) {\r\n  height: 30px;\r\n}\r\ntable tr:nth-child(4) {\r\n  height: 40px;\r\n}\r\ntable tr:nth-child(5) {\r\n  height: 50px;\r\n}\r\n</code></pre></div><p>You may also put together multiple selectors into one variable by building a string and interpolate them in place:</p><div><pre><code>mySelectors = '#foo,#bar,.baz'\r\n\r\n{mySelectors}\r\n  background: #000\r\n</code></pre></div><p>Yields:</p><div><pre><code>#foo,\r\n#bar,\r\n.baz {\r\n  background: #000;\r\n}\r\n</code></pre></div></div>\r\n"}